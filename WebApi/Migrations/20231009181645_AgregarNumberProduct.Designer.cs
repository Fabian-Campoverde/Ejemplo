// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Datos;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20231009181645_AgregarNumberProduct")]
    partial class AgregarNumberProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApi.Model.NumberProduct", b =>
                {
                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductNo");

                    b.HasIndex("ProductId");

                    b.ToTable("NumberProducts");
                });

            modelBuilder.Entity("WebApi.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("imgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Bebidas",
                            Description = "",
                            FechaCreacion = new DateTime(2023, 10, 9, 13, 16, 45, 152, DateTimeKind.Local).AddTicks(31),
                            Name = "Gaseosa",
                            Precio = 15.5,
                            Proveedor = "Coca Cola",
                            Stock = 20,
                            imgUrl = ""
                        },
                        new
                        {
                            Id = 2,
                            Category = "Bebidas",
                            Description = "",
                            FechaCreacion = new DateTime(2023, 10, 9, 13, 16, 45, 152, DateTimeKind.Local).AddTicks(43),
                            Name = "Agua",
                            Precio = 5.5,
                            Proveedor = "Coca Cola",
                            Stock = 120,
                            imgUrl = ""
                        });
                });

            modelBuilder.Entity("WebApi.Model.NumberProduct", b =>
                {
                    b.HasOne("WebApi.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
